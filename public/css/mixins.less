@import "variables.less";
@import "colors.less";
@import "fonts.less";

// complementary color scheme
@base: #663333;
@complement1: spin(@base, 180);
@complement2: darken(spin(@base, 180), 5%);
@lighten1: lighten(@base, 15%);
@lighten2: lighten(@base, 30%);

.active(@color, @multiplier: 0.8) {
    color: @color;
    &:active {
        color: @color*@multiplier;
    }
}
.active-bg(@color, @multiplier: 0.8) {
        background-color: @color;
    &:active {
        background-color: @color*@multiplier;
    }
}
.animation(@time: 1s, @delay: 0s,) {
    animation-duration: @time!important;
    animation-delay: @delay!important;
}
.background(@color, @textColor) {
    background-color:@color;
    color:@textColor;
}
.blur {
    background-size: cover;
    left: -25px;
    right: -25px;
    top: -25px;
    bottom: -25px;
}
.border-radius(@radius) {
  -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
}
.box-shadow (@x, @y, @blur: 0px, @color) {
    -webkit-box-shadow: @x @y @blur @color;
    -moz-box-shadow: @x @y @blur @color;
    box-shadow: @x @y @blur @color;
}
.card(@level: 1) {
    & when (@level = 1) {
        box-shadow: 0 1px 4px 0 rgba(49, 53, 66, 0.37);
    }
    & when (@level = 2) {
        box-shadow: 0 6px 10px 0 rgba(49, 53, 66, 0.3), 0 2px 2px 0 rgba(49, 53, 66, 0.2);
    }
    & when (@level = 3) {
        box-shadow: 0 13px 25px 0 rgba(49, 53, 66, 0.3), 0 11px 7px 0 rgba(0, 0, 0, 0.19);
    }
    & when (@level = 4) {
        box-shadow: 0 20px 40px 0 rgba(49, 53, 66, 0.3), 0 14px 12px 0 rgba(49, 53, 66, 0.17);
    }
    & when (@level = 5) {
        box-shadow: 0 27px 55px 0 rgba(49, 53, 66, 0.3), 0 17px 17px 0 rgba(49, 53, 66, 0.15);
    }
}
.center {
    margin:auto;
}
.click {
    cursor:pointer;
    .transition(0.1s, ease-in, color);
}
.createBlur(@image, @length) {
    filter: blur(@length);
    -webkit-filter: blur(@length);
    background: @image;
    position: absolute;
}
.createDivider(@width, @height:initial, @color) {
    height: @height;
    width: @width;
    background-color: @color;
}
.createOverlay(@opacity, @color: @dark-gray) {
    z-index: 1;
    &::before {
        content: '';
        opacity: @opacity;
        background-color: @color;
        height: 100%;
        width: 100%;
        position: absolute;
        left: 0;
        top: 0;
        z-index: -1;
    }
}
.fadeBackground(@color:@dark-gray, @alpha:100%) {
    background-color: fade(@color, @alpha);
}
.gradient(@origin, @stops){
    background: -webkit-linear-gradient(@origin, @stops) no-repeat;
    background:    -moz-linear-gradient(@origin, @stops) no-repeat;
    background:    -ms-linear-gradient(@origin, @stops) no-repeat;
    background:      -o-linear-gradient(@origin, @stops) no-repeat;
    background:         linear-gradient(@origin, @stops) no-repeat;
}
.hidden  {
    display:none!important;
}
.header  {
    font-size:4rem;
    font-weight: 400;
    font-family: Avenir Regular;
    letter-spacing: 0.5rem;
}
.header-medium {
    font-size:3rem;
    font-weight:400;
    font-family: Avenir Regular;
    letter-spacing: 0.2rem;
}
.header-small  {
    font-size:1.25rem;
    font-weight: 300;
    font-family: Avenir Regular;
    letter-spacing: 0.1rem;
}
.heading(@background, @color) {
    .background(@background, @color);
    .flex-container;
    padding: 2rem 0 0 2vw;
    border-top: solid 1px;
    border-bottom: solid 1px;
    font-size: 2rem;
}
.hidden-fade {
    opacity:0!important;
}
.hover(@color, @multiplier: 0.8) {
    color: @color;
    &:hover {
      color: @color*@multiplier;
    }
}
.hover-bg(@color, @multiplier: 0.8) {
    background-color: @color;
    &:hover {
      background-color: @color*@multiplier;
    }
}

.scrollable {
    overflow-y:scroll!important;
}
.size-min(@width, @height) {
    min-width: @width!important;
    min-height: @height!important;
}
.size(@width, @height: @width) {
    width: @width!important;
    height: @height!important;
}
.transition(@durationTime:@defaultDuration, @transitionType:ease-out, @transitionProperty:all) {
    transition: @transitionProperty @durationTime @transitionType;
    transition-duration: @durationTime;
}
.transform(@value) {
    -webkit-transform: @value;
    -moz-transform:    @value;
    -ms-transform:     @value;
    -o-transform:      @value;
    transform:         @value;
}

//media queries
.desktop(@rules, @min: 640px) {
    @media screen 
    and (min-width: @min) 
    {@rules();}
}
.small(@rules, @max: 540px) {
    @media screen
    and (max-width: @max)
    {@rules();}
}
.medium(@rules, @min: 420px, @max: 840px) {
    @media screen 
    and (max-width: @max) 
    and (min-width: @min) 
    {@rules();}
}
@-ms-viewport{
  width: device-width;
}