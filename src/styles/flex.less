.flexContainer(@direction:row, @oldDirection:horizontal, @wrap:nowrap) {
	display: flex;
	flex-direction:@direction;
	flex-flow: @direction @wrap;
}
.flex(@flexGrow:1, @flexShrink: 1, @flexBasis: auto) {
	flex: @flexGrow @flexShrink @flexBasis;
}
.flex-container {
	display: flex;
	position: relative;
}

.flex-column {
	.flexContainer(column, vertical, nowrap);
}
.flex-row {
	.flexContainer(row, horizontal, wrap);
}

// grid sizing

.flex-zero {
	.flex(0,1,auto)!important;
}
.flex {
	.flex(1,1,auto)!important;
}
.flex-2x {
	.flex(2,1,auto)!important;
}
.flex-3x {
	.flex(3,1,auto)!important;
}
.flex-4x {
	.flex(4,1,auto)!important;
}
.flex-5x {
	.flex(5,1,auto)!important;
}
.flex-6x {
	.flex(6,1,auto)!important;
}
.flex-lg {
	.flex(10,1,auto)!important;
}
.flex-fixed {
	.flex(1,1,0)!important;
}
.flex-fixed-2x {
	.flex(2,1,0)!important;
}
.flex-fixed-3x {
	.flex(3,1,0)!important;
}
.flex-fixed-4x {
	.flex(4,1,0)!important;
}
.flex-fixed-5x {
	.flex(5,1,0)!important;
}

.buffer {
.flex(1,1,auto)!important;
}
.buffer-2x {
	.flex(2,1,auto)!important;
}
.buffer-3x {
	.flex(3,1,auto)!important;
}
.buffer-4x {
	.flex(4,1,auto)!important;
}
.buffer-5x {
	.flex(5,1,auto)!important;
}
.buffer-6x {
	.flex(6,1,auto)!important;
}
.buffer-lg {
	.flex(10,1,auto)!important;   
}